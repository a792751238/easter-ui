{"version":3,"file":"index.js","sources":["webpack:///webpack/bootstrap a6886cd64cbbbd5c562d","webpack:///./src/kiana/objects/index.js","webpack:///./src/index.js","webpack:///./src/index.html","webpack:///./src/kiana/Kiana.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/kiana/arrays/index.js","webpack:///./src/kiana/functions/index.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a6886cd64cbbbd5c562d","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Created by easterCat on 2018/1/22.\r\n */\nexports.isArrayLike = isArrayLike;\nexports.isArray = isArray;\nexports.extend = extend;\nexports.isElement = isElement;\nexports.isObject = isObject;\nexports.isPlainObject = isPlainObject;\nexports.isWindow = isWindow;\nexports.isFunction = isFunction;\nexports.isDate = isDate;\nexports.isError = isError;\nexports.isString = isString;\nexports.isArguments = isArguments;\nexports.isNumber = isNumber;\nexports.isRegExp = isRegExp;\nexports.isEmpty = isEmpty;\nexports.keys = keys;\nexports.values = values;\nexports.pick = pick;\n\n\nvar MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\nfunction isArrayLike(collection) {\n    var length = collection.length;\n    return typeof length === 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n}\n\n/**\r\n * 判断是否是数组对象\r\n * @param obj\r\n * @returns {boolean}\r\n */\nfunction isArray(obj) {\n    if (Array.isArray) return Array.isArray(obj);else return type(obj) === 'array';\n}\n\n/**\r\n * 返回一个对象可枚举属性组成的数组\r\n * @param obj\r\n * @returns {Array}\r\n */\nfunction keys(obj) {\n    if (!isObject(obj)) {\n        return [];\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    var keys = [];\n\n    for (var type in obj) {\n        if (obj.hasOwnProperty(type)) {\n            keys.push(type);\n        }\n    }\n\n    return keys;\n}\n\nfunction values(obj) {\n    if (isObject(obj)) {\n        if (Object.values) {\n            return Object.values(obj);\n        }\n\n        var _keys = keys(obj);\n        var length = _keys.length;\n        var result = [];\n\n        for (var i = 0; i < length; i++) {\n            result[i] = obj[_keys[i]];\n        }\n\n        return result;\n    } else {\n        return {};\n    }\n}\n\n/**\r\n * 对象合并，将源对象复制到目标对象\r\n * @returns {*|{}}\r\n */\nfunction extend() {\n    var deep = false;\n    var name, options, src, copy, clone, copyIsArray;\n    var length = arguments.length;\n    // 记录要复制的对象的下标,默认从1开始\n    var i = 1;\n    // 第一个参数不传布尔值的情况下，target默认是第一个参数\n    var target = arguments[0] || {};\n    // 如果target不是对象，我们是无法进行复制的，所以设为{}\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        //因为第一个下标是boolean，所有复制的对象下标从2开始\n        i++;\n    }\n    // 如果target不是对象，我们是无法进行复制的，所以设为{}\n    if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) !== 'object' && !isFunction(target)) {\n        target = {};\n    }\n\n    for (; i < length; i++) {\n        options = arguments[i];\n        if (options !== null) {\n            for (name in options) {\n                if (options.hasOwnProperty(name)) {\n                    src = target[name]; // 要复制的对象的属性值\n                    copy = options[name]; // 要复制的对象的属性值\n\n                    // 解决循环引用\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    // 要递归的对象必须是 plainObject 或者数组\n                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && Array.isArray(src) ? src : [];\n                        } else {\n                            clone = src && isPlainObject(src) ? src : {};\n                        }\n                        target[name] = extend(deep, clone, copy);\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n    }\n    return target;\n}\n\nfunction pick() {}\n\n/**\r\n * 判断是否为 DOM 元素\r\n * @param obj\r\n * @returns {boolean}\r\n */\nfunction isElement(obj) {\n    // 确保 obj 不是 null, undefined 等假值\n    // 并且 obj.nodeType === 1\n    return !!(obj && obj.nodeType === 1);\n}\n\nfunction isPlainObject(obj) {\n    var proto,\n        Ctor,\n        newobj = {};\n    // 排除掉明显不是obj的以及一些宿主对象如Window\n    if (!obj || Object.prototype.toString.call(obj) !== '[object Object]') {\n        return false;\n    }\n    /**\r\n     * getPrototypeOf es5 方法，获取 obj 的原型\r\n     * 以 new Object 创建的对象为例的话\r\n     * obj.__proto__ === Object.prototype\r\n     */\n    proto = Object.getPrototypeOf(obj);\n    // 没有原型的对象是纯粹的，Object.create(null) 就在这里返回 true\n    if (!proto) return true;\n    /**\r\n     * 以下判断通过 new Object 方式创建的对象\r\n     * 判断 proto 是否有 constructor 属性，如果有就让 Ctor 的值为 proto.constructor\r\n     * 如果是 Object 函数创建的对象，Ctor 在这里就等于 Object 构造函数\r\n     */\n    Ctor = newobj.hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    // 在这里判断 Ctor 构造函数是不是 Object 构造函数，用于区分自定义构造函数和 Object 构造函数\n    return typeof Ctor === \"function\" && newobj.hasOwnProperty.toString.call(Ctor) === newobj.hasOwnProperty.toString.call(Object);\n}\n\n/**\r\n * 判断是否为对象,这里的对象包括 function 和 object\r\n * @param obj\r\n * @returns {boolean}\r\n */\nfunction isObject(obj) {\n    return _type(obj) === 'object';\n}\n\nfunction isEmpty(obj) {\n    return !!(obj && obj.nodeType === 1);\n}\n\nfunction isFunction(obj) {\n    return _type(obj) === /**/'function';\n}\nfunction isDate(obj) {\n    return _type(obj) === 'date';\n}\nfunction isError(obj) {\n    return _type(obj) === 'error';\n}\nfunction isString(obj) {\n    return _type(obj) === 'string';\n}\nfunction isArguments(obj) {\n    return _type(obj) === 'arguments';\n}\nfunction isNumber(obj) {\n    return _type(obj) === 'number';\n}\nfunction isRegExp(obj) {\n    return _type(obj) === 'regexp';\n}\n\n/**\r\n * Window 对象作为客户端 JavaScript 的全局对象，它有一个 window 属性指向自身\r\n * @param obj\r\n */\nfunction isWindow(obj) {\n    //如果ibj有一个window属性指向自身，说明是window对象\n    return obj !== null && obj === obj.window;\n}\n\nvar class2type = {};\n\n\"Boolean Number String Function Array Date RegExp Object Error Null Undefined\".split(\" \").forEach(function (item, index) {\n    class2type[\"[object \" + item + \"]\"] = item.toLowerCase();\n});\n\nfunction _type(obj) {\n    if (obj === null) {\n        return obj + '';\n    }\n    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function' ? class2type[Object.prototype.toString.call(obj)] || 'object' : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/kiana/objects/index.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nrequire('./index.html');\n\nvar _Kiana = require('./kiana/Kiana');\n\nvar _Kiana2 = _interopRequireDefault(_Kiana);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 1\n// module chunks = 0","module.exports = \"module.exports = __webpack_public_path__ + \\\"index.html\\\";\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.html\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _arrays = require('./arrays');\n\nvar _objects = require('./objects');\n\nvar _functions = require('./functions');\n\n(function () {\n    'use strict';\n\n    //严格模式下，this指向undefined而不是window\n\n    var root = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.self === self && self || (typeof global === 'undefined' ? 'undefined' : _typeof(global)) === 'object' && global.global === global && global || this || {};\n\n    //js中函数也是一种对象，可以挂载属性和方法\n    var _ = function _(obj) {\n        if (obj instanceof _) return obj;\n        if (!(this instanceof _)) return new _(obj);\n        this._wrapped = obj;\n    };\n\n    //导出\n    if (typeof exports !== 'undefined' && !exports.nodeType) {\n        if (typeof module !== 'undefined' && !module.nodeType && module.exports) {\n            exports = module.exports = _;\n        }\n        exports._ = _;\n    } else {\n        root._ = _;\n    }\n\n    _.version = '0.0.1';\n\n    var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\n    var isArrayLike = function isArrayLike(collection) {\n        var length = collection.length;\n        return typeof length === 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n    };\n\n    _.each = function (obj, callback) {\n        var length,\n            i = 0;\n        if (isArrayLike(obj)) {\n            length = obj.length;\n            for (; i < length; i++) {\n                if (callback.call(obj[i], obj[i], i) === false) {\n                    break;\n                }\n            }\n        } else {\n            for (i in obj) {\n                if (callback.call(obj[i], obj[i], i) === false) {\n                    break;\n                }\n            }\n        }\n        return obj;\n    };\n\n    /**\r\n     * underscore 内部方法根据 this 指向（context 参数）以及 argCount 参数二次操作返回一些回调、迭代方法\r\n     * @param func\r\n     * @param context\r\n     * @returns {*}\r\n     */\n    var optimizeCb = function optimizeCb(func, context) {\n        if (context === void 0) return func;\n        return function () {\n            return func.apply(context, arguments);\n        };\n    };\n\n    var cb = function cb(value, context, argCount) {\n        if (value === null) return _.identity;\n        if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n        if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n        return _.property(value);\n    };\n\n    var getLength = property('length');\n\n    // 闭包\n    function property(key) {\n        return function (obj) {\n            //使用void 0替代undefined已防止undefined在低版本浏览器被重写\n            return obj === null ? void 0 : obj[key];\n        };\n    }\n\n    _.iteratee = function (value, context) {\n        return cb(value, context, Infinity);\n    };\n\n    _.functions = function (obj) {\n        var names = [];\n        for (var key in obj) {\n            if (_.isFunction(obj[key])) names.push(key);\n        }\n        return names.sort();\n    };\n\n    _.isMatch = function (object, attrs) {\n        var keys = _.keys(attrs),\n            length = keys.length;\n        if (object === null) return !length;\n        var obj = Object(object);\n        for (var i = 0; i < length; i++) {\n            var key = keys[i];\n            if (attrs[key] !== obj[key] || !(key in obj)) {\n                return false;\n            }\n        }\n    };\n\n    _.isEqual = function (a, b) {};\n\n    //对象\n    _.keys = _objects.keys;\n    _.values = _objects.values;\n    _.extend = _objects.extend;\n    _.pick = _objects.pick;\n    _.isEmpty = _objects.isEmpty;\n    _.isElement = _objects.isElement;\n    _.isArray = _objects.isArray;\n    _.isObject = _objects.isObject;\n    _.isPlainObject = _objects.isPlainObject;\n    _.isFunction = _objects.isFunction;\n    _.isDate = _objects.isDate;\n    _.isError = _objects.isError;\n    _.String = _objects.isString;\n    _.isArguments = _objects.isArguments;\n    _.isNumber = _objects.isNumber;\n    _.isRegExp = _objects.isRegExp;\n    _.isWindow = _objects.isWindow;\n    _.matcher = function (attrs) {\n        attrs = _.extend({}, attrs);\n        return function (obj) {\n            return _.isMatch(obj, attrs);\n        };\n    };\n\n    //函数\n    _.debounce = _functions.debounce;\n    _.throttle = _functions.throttle;\n\n    //数组\n    _.max = _arrays.max;\n    _.min = _arrays.min;\n    _.uniq = _.unique = _arrays.unique;\n    _.flatten = function (arr, shallow) {\n        return (0, _arrays.flatten)(arr, shallow, false);\n    };\n    _.union = function () {\n        return _.uniq((0, _arrays.flatten)(arguments, true, true));\n    };\n    _.findIndex = _arrays.findIndex;\n    _.findLastIndex = _arrays.findLastIndex;\n    _.sortedIndex = _arrays.sortedIndex;\n    _.indexOf = _arrays.indexOf;\n    _.lastIndexOf = _arrays.lastIndexOf;\n    _.difference = _arrays.difference;\n    _.without = _arrays.without;\n\n    _.property = function (path) {\n        if (!_.isArray(path)) {\n            return shallowProperty(path);\n        }\n        return function (obj) {\n            return deepGet(obj, path);\n        };\n    };\n\n    var shallowProperty = function shallowProperty(key) {\n        return function (obj) {\n            return obj === null ? void 0 : obj[key];\n        };\n    };\n\n    var deepGet = function deepGet(obj, path) {\n        var length = path.length;\n        for (var i = 0; i < length; i++) {\n            if (obj === null) return void 0;\n            obj = obj[path[i]];\n        }\n        return length ? obj : void 0;\n    };\n\n    _.reverse = function (string) {\n        return string.split('').reverse().join('');\n    };\n\n    _.map = function (obj, iteratee, context) {\n        iteratee = cb(iteratee, context);\n\n        var keys = !isArrayLike(obj) && _.keys(obj),\n            length = (keys || obj).length,\n            results = Array(length);\n\n        for (var i = 0; i < length; i++) {\n            var currentKey = keys ? keys[i] : i;\n            results[i] = iteratee.call(context, obj[currentKey], currentKey, obj);\n        }\n        return results;\n    };\n\n    _.identity = function (value) {\n        return value;\n    };\n\n    _.chain = function (obj) {\n        var instance = _(obj);\n        instance._chain = true;\n        return instance;\n    };\n\n    var result = function result(instance, obj) {\n        return instance._chain ? _(obj).chain() : obj;\n    };\n\n    //在 _.mixin(_) 前添加自己定义的方法\n    _.mixin = function (obj) {\n        _.each(_.functions(obj), function (name) {\n            var func = _[name] = obj[name];\n            _.prototype[name] = function () {\n                var args = [this._wrapped];\n                Array.prototype.push.apply(args, arguments);\n                return result(this, func.apply(_, args));\n            };\n        });\n        return _;\n    };\n\n    _.mixin(_);\n\n    /**\r\n     * 链式调用返回的是一个对象，此方法用于返回对象里包含的值\r\n     * @returns {*}\r\n     */\n    _.prototype.value = function () {\n        return this._wrapped;\n    };\n\n    _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n    _.prototype.toStrings = function () {\n        return '' + this._wrapped;\n    };\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/kiana/Kiana.js\n// module id = 3\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 4\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.min = exports.max = exports.without = exports.difference = exports.unique = exports.lastIndexOf = exports.indexOf = exports.sortedIndex = exports.findLastIndex = exports.findIndex = exports.flatten = undefined;\n\nvar _index = require('../objects/index');\n\nexports.flatten = flatten;\nexports.findIndex = findIndex;\nexports.findLastIndex = findLastIndex;\nexports.sortedIndex = sortedIndex;\nexports.indexOf = indexOf;\nexports.lastIndexOf = lastIndexOf;\nexports.unique = unique;\nexports.difference = difference;\nexports.without = without;\nexports.max = max;\nexports.min = min;\n\n/**\r\n * 数组扁平化\r\n * _.flatten/\r\n * @param  {Array} input   要处理的数组\r\n * @param  {boolean} shallow true只扁平一层,false为全部展开\r\n * @param  {boolean} strict  是否严格处理元素，下面有解释\r\n * @param  {Number} startIndex  开始查找的起始位置\r\n * 源码地址：https://github.com/jashkenas/underscore/blob/master/underscore.js#L528\r\n */\n\nfunction flatten(input, shallow, strict, startIndex) {\n    // 递归使用的时候会用到output\n    var output = [],\n        idx = 0;\n\n    for (var i = startIndex || 0, length = input.length; i < length; i++) {\n        var value = input[i];\n        // 数组 或者 arguments，就进行处理\n        // if (isArrayLike(value) && (isArray(value) || _.isArguments(value))) {\n        if ((0, _index.isArrayLike)(value) && (0, _index.isArray)(value)) {\n            // 如果是全部扁平就递归，传入已经处理的 output，递归中接着处理 output\n            if (!shallow) {\n                value = flatten(value, shallow, strict);\n            }\n            var j = 0,\n                len = value.length;\n            output.length += len;\n            while (j < len) {\n                output[idx++] = value[j++];\n            }\n        }\n        // 不是数组，根据 strict 的值判断是跳过不处理还是放入 output\n        else if (!strict) {\n                output[idx++] = value;\n            }\n    }\n    return output;\n}\n\n/**\r\n * 返回一个删除所有指定值后的 array副本\r\n * @param array\r\n * @returns {*}\r\n */\nfunction without(array) {\n    // slice.call(arguments, 1)将 arguments 转为数组（同时去掉第一个元素）\n    // 之后便可以调用 _.difference 方法\n    return difference(array, Array.prototype.slice.call(arguments, 1));\n}\n\nfunction difference(array) {\n    //将参数数组展开一层\n    var rest = flatten(arguments, true, true, 1);\n    return array.filter(function (item) {\n        return rest.indexOf(item) === -1;\n    });\n}\n\n/**\r\n * 数组去重\r\n * @param array 传入的数组\r\n * @param isSorted 判断是否是已经排序过得数组\r\n * @param iteratee 迭代函数\r\n * @returns {Array}\r\n */\nfunction unique(array, isSorted, iteratee) {\n    var res = [];\n    var seen = [];\n\n    for (var i = 0; i < array.length; i++) {\n        var item = array[i];\n        //如果迭代函数存在，就返回操作后的值\n        var computed = iteratee ? iteratee(item, i, array) : item;\n        if (isSorted) {\n            if (!i || seen !== computed) {\n                res.push(item);\n            }\n            seen = computed;\n        } else if (iteratee) {\n            if (seen.indexOf(computed) === -1) {\n                seen.push(computed);\n                res.push(item);\n            }\n        } else if (res.indexOf(item) === -1) {\n            res.push(item);\n        }\n    }\n\n    return res;\n}\n\n/**\r\n * 获取数组中最大值\r\n * @param obj 传入的数组或对象\r\n * @param iteratee 迭代函数\r\n * @param context\r\n * @returns {number}\r\n */\nfunction max(obj, iteratee, context) {\n    var result = -Infinity,\n        computed,\n        lastComputed = -Infinity,\n        item;\n\n    //如果只是传入数组或对象，没有迭代函数，则正常比较\n    if (!iteratee && obj) {\n        obj = (0, _index.isArrayLike)(obj) ? obj : (0, _index.values)(obj);\n\n        for (var i = 0, length = obj.length; i < length; i++) {\n            item = obj[i];\n            if (item > result) {\n                result = item;\n            }\n        }\n    } else {\n        iteratee = _cb(iteratee, context);\n\n        // result 保存结果元素\n        // lastComputed 保存计算过程中出现的最值\n        // 遍历元素\n        obj.forEach(function (value, index, list) {\n            computed = iteratee(value, index, list); //迭代后的值\n            // && 的优先级高于 ||\n            if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n                result = value;\n                lastComputed = computed;\n            }\n        });\n    }\n\n    return result;\n}\n\n/**\r\n * 获取数组中最小值\r\n * @param obj\r\n * @param iteratee\r\n * @param context\r\n * @returns {Number}\r\n */\nfunction min(obj, iteratee, context) {\n    var result = Infinity,\n        item,\n        computed,\n        lastComputed = Infinity;\n\n    if (!iteratee && obj) {\n        obj = (0, _index.isArrayLike)(obj) ? obj : (0, _index.values)(obj);\n\n        for (var i = 0, length = obj.length; i < length; i++) {\n            item = obj[i];\n\n            if (item < result) {\n                result = item;\n            }\n        }\n    } else {\n        iteratee = _cb(iteratee, context);\n\n        obj.forEach(function (value, index, list) {\n            //类似于iteratee.call(context,value,index,list);\n            computed = iteratee(value, index, list);\n\n            if (computed < lastComputed || computed === Infinity && result === Infinity) {\n                result = value;\n                lastComputed = computed;\n            }\n        });\n    }\n\n    return result;\n}\n\nfunction findIndex(array, callback, context) {\n    return _createIndexFinder(1);\n}\n\nfunction findLastIndex(array, callback, context) {\n    return _createIndexFinder(-1);\n}\n\nfunction indexOf(array, item) {\n    return _createIndexOfFinder(1, findIndex, sortedIndex);\n}\n\nfunction lastIndexOf(array, item) {\n    return _createIndexOfFinder(-1, findLastIndex);\n}\n\nfunction sortedIndex(array, obj, iteratee, context) {\n    iteratee = _cb(iteratee, context);\n    var low = 0;\n    var high = array.length;\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (iteratee(array[mid]) < iteratee(obj)) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return high;\n}\n\nfunction _createIndexFinder(dir) {\n    return function (array, callback, context) {\n        var length = array.length;\n        var index = dir > 0 ? 0 : length - 1;\n\n        for (; index >= 0 && index < length; index += dir) {\n            if (callback.call(context, array[index], index, array)) {\n                return index;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction _createIndexOfFinder(dir, predicate, sortedIndex) {\n    //idx设定开始查找的位置\n    return function (array, item, idx) {\n        var length = array.length;\n        var i = 0;\n\n        if (typeof idx === 'number') {\n            if (idx > 0) {\n                i = idx >= 0 ? idx : Math.max(length + idx, 0);\n            } else {\n                length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n            }\n        } else if (sortedIndex && idx && length) {\n            idx = sortedIndex(array, item);\n            // 如果该插入的位置的值正好等于元素的值，说明是第一个符合要求的值\n            return array[idx] === item ? idx : -1;\n        }\n\n        // 判断是否是 NaN\n        if (item !== item) {\n            idx = predicate(array.slice(i, length), isNaN);\n            return idx >= 0 ? idx + i : -1;\n        }\n\n        for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n            if (array[idx] === item) {\n                return idx;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction _cb(fn, context) {\n    return function (arg) {\n        //如果回调函数存在，则执行回调函数，并且将传入的参数当做参数传入回调函数\n        //如果回调函数不存在，则直接将传入的参数返回，什么也不做\n        return fn ? fn.call(context, arg) : arg;\n    };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/kiana/arrays/index.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * Created by easterCat on 2018/1/24.\r\n */\nexports.debounce = debounce;\nexports.throttle = throttle;\n\n/**\r\n * 函数防抖\r\n * @param func\r\n * @param wait\r\n * @param immediate\r\n * @returns {debounced}\r\n */\n\nfunction debounce(func, wait, immediate) {\n    var timeout, result;\n    var debounced = function debounced() {\n        var context = this;\n        var args = arguments;\n\n        if (timeout) clearTimeout(timeout);\n\n        if (immediate) {\n            var callnow = !timeout;\n            timeout = setTimeout(function () {\n                timeout = null;\n            }, wait);\n            if (callnow) result = func.apply(context, args);\n        } else {\n            timeout = setTimeout(function () {\n                func.apply(context, args);\n            }, wait);\n        }\n        return result;\n    };\n\n    debounced.cancel = function () {\n        clearTimeout(timeout);\n        timeout = null;\n    };\n\n    return debounced;\n}\n\n/**\r\n * 函数节流 鼠标移入能立刻执行，停止触发的时候还能再执行一次！\r\n * @param func 回调函数\r\n * @param wait 延时时间\r\n * @param options leading:false禁用第一次执行,trailing: false 禁用结束后再执行一次\r\n * @returns {throttled}\r\n */\nfunction throttle(func, wait, options) {\n    var timeout, context, args, result;\n    var previous_time = 0;\n    if (!options) options = {};\n\n    var later = function later() {\n        //leading为false将初始时间设为0\n        previous_time = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        func.apply(func, args);\n        if (!timeout) context = args = null;\n    };\n\n    var throttled = function throttled() {\n        var now_time = Date.now();\n        if (!previous_time && options.leading === false) previous_time = now_time;\n        //下次触发func的剩余时间\n        var remaining = wait - (now_time - previous_time);\n        context = this;\n        args = arguments;\n        // 如果没有剩余的时间了或者你改了系统时间,则进行首次执行\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous_time = now_time;\n            console.log(remaining);\n            func.apply(context, args);\n            if (!timeout) context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n            //条件满足，利用延时函数在结束后再执行一次\n            timeout = setTimeout(later, remaining);\n        }\n    };\n\n    throttled.cancel = function () {\n        clearTimeout(timeout);\n        previous_time = 0;\n        timeout = null;\n    };\n\n    return throttled;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/kiana/functions/index.js\n// module id = 7\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtsourceRoot":""}