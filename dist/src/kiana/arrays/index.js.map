{"version":3,"sources":["../../../../src/kiana/arrays/index.js"],"names":["flatten","without","difference","unique","max","min","findIndex","findLastIndex","indexOf","lastIndexOf","sortedIndex","_createIndexFinder","_createIndexOfFinder","_cb","input","shallow","strict","startIndex","output","idx","i","length","value","j","len","array","Array","prototype","slice","call","arguments","rest","filter","item","isSorted","iteratee","res","seen","computed","push","obj","context","result","Infinity","lastComputed","forEach","index","list","callback","low","high","mid","Math","floor","dir","predicate","isNaN","fn","arg"],"mappings":"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","file":"index.js","sourcesContent":["import {\r\n    isArrayLike,\r\n    isArray,\r\n    values,\r\n} from '../objects/index';\r\n\r\n/**\r\n * 数组扁平化\r\n * _.flatten/\r\n * @param  {Array} input   要处理的数组\r\n * @param  {boolean} shallow true只扁平一层,false为全部展开\r\n * @param  {boolean} strict  是否严格处理元素，下面有解释\r\n * @param  {Number} startIndex  开始查找的起始位置\r\n * 源码地址：https://github.com/jashkenas/underscore/blob/master/underscore.js#L528\r\n */\r\nexport function flatten(input, shallow, strict, startIndex) {\r\n    // 递归使用的时候会用到output\r\n    var output = [], idx = 0;\r\n\r\n    for (var i = startIndex || 0, length = input.length; i < length; i++) {\r\n        var value = input[i];\r\n        // 数组 或者 arguments，就进行处理\r\n        // if (isArrayLike(value) && (isArray(value) || _.isArguments(value))) {\r\n        if (isArrayLike(value) && (isArray(value))) {\r\n            // 如果是全部扁平就递归，传入已经处理的 output，递归中接着处理 output\r\n            if (!shallow) {\r\n                value = flatten(value, shallow, strict);\r\n            }\r\n            var j = 0, len = value.length;\r\n            output.length += len;\r\n            while (j < len) output[idx++] = value[j++];\r\n        }\r\n        // 不是数组，根据 strict 的值判断是跳过不处理还是放入 output\r\n        else if (!strict) {\r\n            output[idx++] = value;\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * 返回一个删除所有指定值后的 array副本\r\n * @param array\r\n * @returns {*}\r\n */\r\nexport function without(array) {\r\n    // slice.call(arguments, 1)将 arguments 转为数组（同时去掉第一个元素）\r\n    // 之后便可以调用 _.difference 方法\r\n    return difference(array, Array.prototype.slice.call(arguments, 1));\r\n}\r\n\r\nexport function difference(array) {\r\n    //将参数数组展开一层\r\n    var rest = flatten(arguments, true, true, 1);\r\n    return array.filter(function (item) {\r\n        return rest.indexOf(item) === -1;\r\n    })\r\n}\r\n\r\n/**\r\n * 数组去重\r\n * @param array 传入的数组\r\n * @param isSorted 判断是否是已经排序过得数组\r\n * @param iteratee 迭代函数\r\n * @returns {Array}\r\n */\r\nexport function unique(array, isSorted, iteratee) {\r\n    var res = [];\r\n    var seen = [];\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var item = array[i];\r\n        //如果迭代函数存在，就返回操作后的值\r\n        var computed = iteratee ? iteratee(item, i, array) : item;\r\n        if (isSorted) {\r\n            if (!i || seen !== computed) {\r\n                res.push(item);\r\n            }\r\n            seen = computed;\r\n        } else if (iteratee) {\r\n            if (seen.indexOf(computed) === -1) {\r\n                seen.push(computed);\r\n                res.push(item);\r\n            }\r\n        } else if (res.indexOf(item) === -1) {\r\n            res.push(item);\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n\r\n/**\r\n * 获取数组中最大值\r\n * @param obj 传入的数组或对象\r\n * @param iteratee 迭代函数\r\n * @param context\r\n * @returns {number}\r\n */\r\nexport function max(obj, iteratee, context) {\r\n    var result = -Infinity,\r\n        computed,\r\n        lastComputed = -Infinity,\r\n        item;\r\n\r\n    //如果只是传入数组或对象，没有迭代函数，则正常比较\r\n    if (!iteratee && obj) {\r\n        obj = isArrayLike(obj) ? obj : values(obj);\r\n\r\n        for (var i = 0, length = obj.length; i < length; i++) {\r\n            item = obj[i];\r\n            if (item > result) {\r\n                result = item;\r\n            }\r\n        }\r\n    } else {\r\n        iteratee = _cb(iteratee, context);\r\n\r\n        // result 保存结果元素\r\n        // lastComputed 保存计算过程中出现的最值\r\n        // 遍历元素\r\n        obj.forEach(function (value, index, list) {\r\n            computed = iteratee(value, index, list);//迭代后的值\r\n            // && 的优先级高于 ||\r\n            if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\r\n                result = value;\r\n                lastComputed = computed;\r\n            }\r\n        })\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * 获取数组中最小值\r\n * @param obj\r\n * @param iteratee\r\n * @param context\r\n * @returns {Number}\r\n */\r\nexport function min(obj, iteratee, context) {\r\n    var result = Infinity, item, computed, lastComputed = Infinity;\r\n\r\n    if (!iteratee && obj) {\r\n        obj = isArrayLike(obj) ? obj : values(obj);\r\n\r\n        for (var i = 0, length = obj.length; i < length; i++) {\r\n            item = obj[i];\r\n\r\n            if (item < result) {\r\n                result = item;\r\n            }\r\n        }\r\n    } else {\r\n        iteratee = _cb(iteratee, context);\r\n\r\n        obj.forEach(function (value, index, list) {\r\n            //类似于iteratee.call(context,value,index,list);\r\n            computed = iteratee(value, index, list);\r\n\r\n            if (computed < lastComputed || computed === Infinity && result === Infinity) {\r\n                result = value;\r\n                lastComputed = computed;\r\n            }\r\n        })\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function findIndex(array, callback, context) {\r\n    return _createIndexFinder(1);\r\n}\r\n\r\nexport function findLastIndex(array, callback, context) {\r\n    return _createIndexFinder(-1);\r\n}\r\n\r\n\r\nexport function indexOf(array, item) {\r\n    return _createIndexOfFinder(1, findIndex, sortedIndex);\r\n}\r\n\r\nexport function lastIndexOf(array, item) {\r\n    return _createIndexOfFinder(-1, findLastIndex);\r\n}\r\n\r\n\r\nexport function sortedIndex(array, obj, iteratee, context) {\r\n    iteratee = _cb(iteratee, context);\r\n    var low = 0;\r\n    var high = array.length;\r\n    while (low < high) {\r\n        var mid = Math.floor((low + high) / 2);\r\n        if (iteratee(array[mid]) < iteratee(obj)) {\r\n            low = mid + 1;\r\n        } else {\r\n            high = mid;\r\n        }\r\n    }\r\n    return high;\r\n}\r\n\r\n\r\nexport function _createIndexFinder(dir) {\r\n    return function (array, callback, context) {\r\n        var length = array.length;\r\n        var index = dir > 0 ? 0 : length - 1;\r\n\r\n        for (; index >= 0 && index < length; index += dir) {\r\n            if (callback.call(context, array[index], index, array)) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\nexport function _createIndexOfFinder(dir, predicate, sortedIndex) {\r\n    //idx设定开始查找的位置\r\n    return function (array, item, idx) {\r\n        var length = array.length;\r\n        var i = 0;\r\n\r\n        if (typeof idx === 'number') {\r\n            if (idx > 0) {\r\n                i = idx >= 0 ? idx : Math.max(length + idx, 0);\r\n            } else {\r\n                length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\r\n            }\r\n        }\r\n\r\n        else if (sortedIndex && idx && length) {\r\n            idx = sortedIndex(array, item);\r\n            // 如果该插入的位置的值正好等于元素的值，说明是第一个符合要求的值\r\n            return array[idx] === item ? idx : -1;\r\n        }\r\n\r\n        // 判断是否是 NaN\r\n        if (item !== item) {\r\n            idx = predicate(array.slice(i, length), isNaN)\r\n            return idx >= 0 ? idx + i : -1;\r\n        }\r\n\r\n        for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\r\n            if (array[idx] === item) {\r\n                return idx;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\nexport function _cb(fn, context) {\r\n    return function (arg) {\r\n        //如果回调函数存在，则执行回调函数，并且将传入的参数当做参数传入回调函数\r\n        //如果回调函数不存在，则直接将传入的参数返回，什么也不做\r\n        return fn ? fn.call(context, arg) : arg;\r\n    }\r\n}\r\n"]}